{"version":3,"sources":["home/index.tsx","base-converter/BinaryValueDisplay.tsx","base-converter/DisplayTemplate.tsx","base-converter/index.tsx","base-converter/HexadecimalValueDisplay.tsx","base-converter/OctalValueDisplay.tsx","template/Sidebar.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Home","Helmet","BinaryValueDisplay","value","onChange","onClickDigit","e","index","parseInt","target","dataset","idx","isNaN","Error","digits","v","result","push","reverse","toDigits","map","data-idx","length","onPointerDown","BaseType","DisplayTemplateBlock","styled","div","props","focused","DisplayTemplate","name","onClick","children","className","HexadecimalValueDisplay","toCharacter","String","fromCharCode","toString","OctalValueDisplay","BaseConverter","useState","setValue","DECIMAL","base","setBase","onKeyDown","key","number","char","NaN","mapDisit","tabIndex","OCTAL","HEXADECIMAL","BINARY","SidebarBlock","Sidebar","links","link","to","AppBlock","App","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cddfbe92.chunk.js","sourcesContent":["import React from \"react\";\nimport { Helmet } from \"react-helmet\";\n\nconst Home: React.FC = () => {\n  return (\n    <div>\n      <Helmet>\n        <title>Dev Utils</title>\n      </Helmet>\n      Home\n    </div>\n  );\n};\n\nexport default Home;\n","import React, { PointerEvent } from \"react\";\n\nconst BinaryValueDisplay: React.FC<{\n  value: number;\n  onChange: (value: number) => void;\n}> = ({ value, onChange }) => {\n  const toDigits = (v: number): number[] => {\n    if (v <= 0) return [0];\n\n    const result = [];\n    while (v) {\n      result.push(v % 2);\n      v = ~~(v / 2);\n    }\n    return result.reverse();\n  };\n\n  const onClickDigit = (e: PointerEvent<HTMLSpanElement>): void => {\n    const index = parseInt((e.target as HTMLSpanElement).dataset.idx!);\n\n    if (isNaN(index)) throw new Error(\"error\");\n\n    if ((value >> index) & 1) onChange(value & ~(1 << index));\n    else onChange(value | (1 << index));\n  };\n\n  const digits = toDigits(value);\n\n  return (\n    <div>\n      {digits.map((v, idx) => (\n        <span\n          key={idx}\n          data-idx={digits.length - idx - 1}\n          onPointerDown={onClickDigit}\n        >\n          {v}\n        </span>\n      ))}\n    </div>\n  );\n};\n\nexport default BinaryValueDisplay;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst DisplayTemplateBlock = styled.div<{ focused: boolean }>`\n  .name-display {\n    padding: 0.2rem 0.5rem;\n    color: gray;\n    text-align: left;\n  }\n\n  .value-display {\n    font-size: 2.5rem;\n    text-align: right;\n    padding: 0 0.5rem;\n  }\n  border: ${(props) => {\n    return props.focused ? \"2px solid yellow;\" : \"2px solid black;\";\n  }};\n`;\nconst DisplayTemplate: React.FC<{\n  name: string;\n  focused: boolean;\n  onClick?: () => void;\n}> = ({ name, focused, onClick, children }) => {\n  return (\n    <DisplayTemplateBlock onClick={onClick} focused={focused}>\n      <div className=\"name-display\">{name}</div>\n      <div className=\"value-display\">{children}</div>\n    </DisplayTemplateBlock>\n  );\n};\n\nexport default DisplayTemplate;\n","import React, { useState } from \"react\";\nimport { Helmet } from \"react-helmet\";\nimport BinaryValueDisplay from \"./BinaryValueDisplay\";\nimport DisplayTemplate from \"./DisplayTemplate\";\nimport HexadecimalValueDisplay from \"./HexadecimalValueDisplay\";\nimport OctalValueDisplay from \"./OctalValueDisplay\";\n\nenum BaseType {\n  BINARY = 2,\n  OCTAL = 8,\n  DECIMAL = 10,\n  HEXADECIMAL = 16,\n}\n\nfunction mapDisit(char: string): number {\n  switch (char) {\n    case \"0\":\n      return 0;\n    case \"1\":\n      return 1;\n    case \"2\":\n      return 2;\n    case \"3\":\n      return 3;\n    case \"4\":\n      return 4;\n    case \"5\":\n      return 5;\n    case \"6\":\n      return 6;\n    case \"7\":\n      return 7;\n    case \"8\":\n      return 8;\n    case \"9\":\n      return 9;\n    case \"a\":\n      return 10;\n    case \"b\":\n      return 11;\n    case \"c\":\n      return 12;\n    case \"d\":\n      return 13;\n    case \"e\":\n      return 14;\n    case \"f\":\n      return 15;\n  }\n  return NaN;\n}\n\nconst BaseConverter: React.FC = () => {\n  const [value, setValue] = useState<number>(0);\n  const [base, setBase] = useState<BaseType>(BaseType.DECIMAL);\n\n  const handleKeyDown: React.KeyboardEventHandler = (e) => {\n    const key = e.key;\n    const number = mapDisit(key);\n    if (!isNaN(number)) {\n      if (number < base) setValue(value * base + number);\n    } else if (key === \"Backspace\") {\n      setValue(~~(value / base));\n    }\n  };\n\n  return (\n    <div onKeyDown={handleKeyDown} tabIndex={0}>\n      <Helmet>\n        <title>Base Converter</title>\n      </Helmet>\n      BaseConverter\n      <DisplayTemplate\n        name=\"Decimal\"\n        focused={base === BaseType.DECIMAL}\n        onClick={() => setBase(BaseType.DECIMAL)}\n      >\n        {value}\n      </DisplayTemplate>\n      <div>\n        <DisplayTemplate\n          name=\"Octal\"\n          focused={base === BaseType.OCTAL}\n          onClick={() => setBase(BaseType.OCTAL)}\n        >\n          <OctalValueDisplay value={value} />\n        </DisplayTemplate>\n        <DisplayTemplate\n          name=\"Hexadecimal\"\n          focused={base === BaseType.HEXADECIMAL}\n          onClick={() => setBase(BaseType.HEXADECIMAL)}\n        >\n          <HexadecimalValueDisplay value={value} />\n        </DisplayTemplate>\n      </div>\n      <DisplayTemplate\n        name=\"Binary\"\n        focused={base === BaseType.BINARY}\n        onClick={() => setBase(BaseType.BINARY)}\n      >\n        <BinaryValueDisplay value={value} onChange={setValue} />\n      </DisplayTemplate>\n    </div>\n  );\n};\n\nexport default BaseConverter;\n","import React from \"react\";\n\nconst HexadecimalValueDisplay: React.FC<{ value: number }> = ({ value }) => {\n  const toCharacter = (v: number): string => {\n    if (v > 16) throw new Error(\"Value should be less than 16\");\n\n    if (v < 10) return String(v);\n    return String.fromCharCode(v - 10 + 65); // \"A\".charCodeAt() === 65\n  };\n\n  const toString = (v: number) => {\n    if (value === 0) return \"0\";\n    let result = \"\";\n    while (v) {\n      result = toCharacter(v % 16) + result;\n      v = ~~(v / 16);\n    }\n    return result;\n  };\n\n  return <div>{toString(value)}</div>;\n};\n\nexport default HexadecimalValueDisplay;\n","import React from \"react\";\n\nconst OctalValueDisplay: React.FC<{ value: number }> = ({ value }) => {\n  const toString = (v: number) => {\n    if (value === 0) return \"0\";\n    let result = \"\";\n    while (v) {\n      result = (v % 8) + result;\n      v = ~~(v / 8);\n    }\n    return result;\n  };\n\n  return <div>{toString(value)}</div>;\n};\n\nexport default OctalValueDisplay;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nconst SidebarBlock = styled.div`\n  border-right: 1px solid black;\n  ul {\n    list-style: none;\n    display: flex;\n    flex-direction: column;\n    margin: 0;\n    padding: 0;\n\n    li {\n      border: 1px solid black;\n    }\n\n    a {\n      display: block;\n      text-decoration: none;\n      color: inherit;\n    }\n  }\n  overflow: auto;\n`;\n\nconst Sidebar: React.FC<{ links: { name: string; to: string }[] }> = ({\n  links,\n}) => {\n  return (\n    <SidebarBlock>\n      <ul>\n        {links.map((link) => (\n          <li>\n            <Link to={link.to}>{link.name}</Link>\n          </li>\n        ))}\n      </ul>\n    </SidebarBlock>\n  );\n};\n\nexport default Sidebar;\n","import React from \"react\";\nimport \"./App.css\";\nimport { Route, Switch } from \"react-router-dom\";\nimport Home from \"./home\";\nimport BaseConverter from \"./base-converter\";\nimport Sidebar from \"./template/Sidebar\";\nimport styled from \"styled-components\";\n\nconst links = [\n  { name: \"Home\", to: \"/\" },\n  { name: \"Base Converter\", to: \"/baseconverter\" },\n];\n\nconst AppBlock = styled.div`\n  display: grid;\n  grid-template-columns: 200px 1fr;\n  height: 100vh;\n`;\n\nfunction App() {\n  return (\n    <AppBlock className=\"App\">\n      <Sidebar links={links} />\n      <Switch>\n        <Route path=\"/baseconverter\">\n          <BaseConverter />\n        </Route>\n        <Route path=\"/\">\n          <Home />\n        </Route>\n      </Switch>\n    </AppBlock>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);  \n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n}\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { HashRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n      <App />\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}